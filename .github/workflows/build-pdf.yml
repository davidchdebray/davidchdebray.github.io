name: Build CV PDF – separate jobs (uses pre‑built container)

# -------------------------------------------------
# When to run the workflow
# -------------------------------------------------
on:
  push:
    paths:
      - 'cv.md'               # Re‑run when the source markdown changes
  workflow_dispatch:          # Allows manual triggering from the UI

# -------------------------------------------------
# 1️⃣ Checkout job – fetches the repo
# -------------------------------------------------
jobs:
  checkout:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

# -------------------------------------------------
# 2️⃣ Build job – runs inside the custom Docker image
# -------------------------------------------------
  build:
    runs-on: ubuntu-latest
    needs: checkout                 # Wait for checkout to finish
    permissions:
      contents: read
    container:
      image: ghcr.io/davidchdebray/pandoc-texlive-full:latest   # ← your image
      options: --user root   # <‑‑ run as root
    steps:
      # Even though we already checked out in the previous job,
      # we need the code inside this container as well.
      - name: Checkout repository again
        uses: actions/checkout@v4

      - name: Create output folder
        run: mkdir -p files

      - name: Convert markdown → PDF with Pandoc
        run: |
          pandoc cv.md \
            --template=.github/workflows/template.tex \
            --pdf-engine=xelatex \
            -o files/DavidDebrayCV.pdf

# -------------------------------------------------
# 3️⃣ Artifact (and optional commit) job
# -------------------------------------------------
  artifact:
    runs-on: ubuntu-latest
    needs: build                    # Wait until the PDF exists
    permissions:
      contents: read
      # Uncomment the line below if you later decide to push the PDF back to the repo
      # contents: write
    steps:
      - name: Checkout repository again
        uses: actions/checkout@v4

      - name: Upload PDF as a workflow artifact
        uses: actions/upload-artifact@v4
        with:
          name: DavidDebrayCV
          path: files/DavidDebrayCV.pdf

# -------------------------------------------------
# 4️⃣ Publish job – pushes the PDF to the Pages branch
# -------------------------------------------------
  publish:
    runs-on: ubuntu-latest
    needs: artifact                # wait until the PDF is uploaded
    permissions:
      contents: write             # needed to push a commit
    steps:
      # 1️⃣ Checkout the repo on the branch that GitHub Pages serves
      - name: Checkout Pages branch
        uses: actions/checkout@v4
        with:
          ref: master
          token: ${{ secrets.GITHUB_TOKEN }}

      # 2️⃣ Pull the artifact we just uploaded (so we have the fresh PDF locally)
      - name: Download PDF artifact
        uses: actions/download-artifact@v4
        with:
          name: DavidDebrayCV
          path: ./files           # matches the URL path

      # 3️⃣ Move the PDF into the correct location (if needed)
      - name: Ensure target folder exists
        run: mkdir -p files

      # 4️⃣ Stage, commit, and push the new PDF
      - name: Commit and push PDF
        env:
          GIT_AUTHOR_NAME:  github-actions[bot]
          GIT_AUTHOR_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
          GIT_COMMITTER_NAME:  github-actions[bot]
          GIT_COMMITTER_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
        run: |
          git add files/DavidDebrayCV.pdf
          if ! git diff --cached --quiet; then
            git commit -m "Update CV PDF (auto‑generated)"
            git push origin master
          else
            echo "No changes detected – PDF is already up‑to‑date."
          fi