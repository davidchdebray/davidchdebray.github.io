name: Build CV PDF ‚Äì separate jobs (uses pre‚Äëbuilt container)

# -------------------------------------------------
# When to run the workflow
# -------------------------------------------------
on:
  push:
    paths:
      - 'cv.md'               # rebuild whenever the markdown source changes
  workflow_dispatch:          # manual trigger from the UI

# -------------------------------------------------
# 1Ô∏è‚É£ Checkout job ‚Äì fetches the repo (kept for symmetry)
# -------------------------------------------------
jobs:
  checkout:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

# -------------------------------------------------
# 2Ô∏è‚É£ Build job ‚Äì runs inside the custom Docker image
# -------------------------------------------------
  build:
    runs-on: ubuntu-latest
    needs: checkout
    permissions:
      contents: read
    container:
      image: ghcr.io/davidchdebray/pandoc-texlive-full:latest
      options: --user root               # run as root so we can write anywhere
    steps:
      # The repository isn‚Äôt automatically present inside the container,
      # so we check it out again.
      - name: Checkout repository again
        uses: actions/checkout@v4

      - name: Create output folder
        run: mkdir -p files               # <-- this folder maps to /files/ on the site

      # *** NEW STEP ‚Äì delete any stale PDF before we recreate it ***
      - name: Delete old PDF (if it exists)
        run: rm -f files/DavidDebrayCV.pdf

      - name: Convert markdown ‚Üí PDF with Pandoc
        run: |
          pandoc cv.md --template=.github/workflows/template.tex --pdf-engine=xelatex -o files/DavidDebrayCV.pdf

# -------------------------------------------------
# 3Ô∏è‚É£ Artifact job ‚Äì makes the PDF available to the next job
# -------------------------------------------------
  artifact:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
    steps:
      - name: Checkout repository again
        uses: actions/checkout@v4

      - name: Upload PDF as a workflow artifact
        uses: actions/upload-artifact@v4
        with:
          name: DavidDebrayCV
          path: files/DavidDebrayCV.pdf

# -------------------------------------------------
# 4Ô∏è‚É£ Publish job ‚Äì pushes the PDF to the **master** branch
# -------------------------------------------------
  publish:
    runs-on: ubuntu-latest
    needs: artifact
    permissions:
      contents: write               # needed to push a commit
    steps:
      # 1Ô∏è‚É£ Checkout the master branch that GitHub Pages builds from
      - name: Checkout master branch
        uses: actions/checkout@v4
        with:
          ref: master               # <-- your site‚Äôs source branch
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0            # full history ‚Äì avoids shallow‚Äëclone fetch errors

      # 2Ô∏è‚É£ Pull the PDF artifact we just created
      - name: Download PDF artifact
        uses: actions/download-artifact@v4
        with:
          name: DavidDebrayCV
          path: ./files             # matches the URL path (/files/‚Ä¶)

      # 3Ô∏è‚É£ Ensure the target folder exists (defensive)
      - name: Ensure target folder exists
        run: mkdir -p files

      # 4Ô∏è‚É£ Show a quick hash of the PDF (helps you see if it really changed)
      - name: Show PDF SHA‚Äë256
        run: |
          if [ -f files/DavidDebrayCV.pdf ]; then
            sha=$(sha256sum files/DavidDebrayCV.pdf | awk '{print $1}')
            echo "üìÑ PDF SHA‚Äë256 = $sha"
          else
            echo "‚ùå PDF not found!"
            exit 1
          fi

      # 5Ô∏è‚É£ Stage, commit, and push the PDF (always commit)
      - name: Commit and push PDF
        env:
          GIT_AUTHOR_NAME: github-actions[bot]
          GIT_AUTHOR_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
          GIT_COMMITTER_NAME: github-actions[bot]
          GIT_COMMITTER_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
        run: |
          # Force‚Äëadd the PDF in case the path is ignored by .gitignore
          git add -f files/DavidDebrayCV.pdf
          
          # Always create a commit ‚Äì the hash step above lets you see if the content actually changed
          git commit -m "Update CV PDF (auto‚Äëgenerated)" || echo "No changes to commit (file identical)."
          
          # Push the commit (if there was nothing to commit, this is a no‚Äëop)
          git push origin master